1. orthodox canonical form is a set of five special member function that ensure proper object 
   management, when handling dynamic memory:
   - destructor
   - copy constructor
   - copy assignment operator

2. what is copy constructor and copy assignment
   - copy constructor
     i. create a new object by coping an existing object
    ii. used when:
        - passing object by value
        - return an object by value
        - explicitly creating a copy
    EXAMPLE:
        class MyClass
        {
            public:
                int *data;

                [ copy constructor ]
                ====================
                MyClass(const MyClass &other)
                {
                    data = new int(*other.data);   <------- deep copy
                }
        };
   - copy assignment operator 
     i. assign one object vlue to another existing object (deep copy)
    ii. free old memory and then copy new data
    EXAMPLE:
        class MyClass
        {
            public:
                int *data;

                [ copy assignmnet ]
                ====================
                MyClass &operator=(const MyClass &other)
                {
                    if (this == &other) return *this;      <--------- self-assignment check
                    delete data;                           <--------- free old memory
                    data = new int(*other.data);           <--------- deep copy
                    return *this;
                }
        };